{% extends "node.html.twig" %}
{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: (optional) The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: (optional) Themed creation date field.
 * - author_name: (optional) Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @ingroup themeable
 */
#}
{% block content %}
    <style>
        .region-content {
            padding: 0px;
        }
    </style>
    <div class="p-5 bg-dark text-light w-100">
        <h2>Cybersecurity</h2>
        <p>
            Cybersecurity Support works with ACCESS RPs and Tracks to develop and maintain policies, procedures,
            services, operational support and incident management capabilities to protect the security of the ACCESS
            cyberinfrastructure (CI) and ensure that it is a safe, secure, and trustworthy shared CI ecosystem.
        </p>
    </div>
    <div class="p-5 bg-light text-dark w-100">
        <h3>
            Primary Activities
        </h3>
        <div class="p-3">
            <a class="btn btn-secondary m-2">CyberSecurity Governance Council (CGS)</a>
            <a class="btn btn-secondary m-2">CyberSecurity Operations</a>
            <a class="btn btn-secondary m-2">Identity and Authentication Management (IAM)</a>
            <a class="btn btn-secondary m-2">identity.access-ci.org</a>
            <a class="btn btn-secondary m-2">Federated Intelligence Sharing</a>
            <a class="btn btn-secondary m-2">ACCESS Incident Response Trust Group (AIRTG)</a>
            <a class="btn btn-secondary m-2">Cybersecurity Awareness, Training, and Mentorship</a>
        </div>
    </div>
    <div class="p-5 bg-dark text-light w-100">
        <p>
            If you suspect a security incident or if your account has been compromised please contact the ACCESS
            Help Desk immediately. The help desk uses the XSEDE Ticketing System and will assign your form
            submission to a ticket. You will receive auto-notification back that lets you know your email has been
            received, and provides you with a ticket number for reference.&nbsp;
            <br>
            <strong>The following ACCESS cybersecurity policies have been approved by the ACCESS Cybersecurity
                Governance Council:</strong>&nbsp;
            <br>
            <a class="btn btn-secondary m-2">Core Information Security Policy and Procedures</a>&nbsp;
            <a class="btn btn-secondary m-2">Incident Response Policy</a>&nbsp;
            <a class="btn btn-secondary m-2">Acceptable Use Policy</a>
        </p>
    </div>
{% endblock %}

